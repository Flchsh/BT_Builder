{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fnil\fcharset0\fprq2 Constantia;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \fi720\sl360\slmult1\qj\ltrch\loch {\f0\fs24\b0\i0 There are also typed versions of the containers. In the current version (1.1.2) these can be accessed from a BT_Blackboard instance in the BT_Behave component. They have get and set methods named by the data type (e.g. GetInt and SetInt for integers. Currently supported types are:}
\par\plain {\f0\fs24\b0\i0 int}
\par\plain {\f0\fs24\b0\i0 float}
\par\plain {\f0\fs24\b0\i0 string}
\par\plain {\f0\fs24\b0\i0 double}
\par\plain {\f0\fs24\b0\i0 bool}
\par\plain {\f0\fs24\b0\i0 Vector2}
\par\plain {\f0\fs24\b0\i0 Vector3}
\par\plain {\f0\fs24\b0\i0 Quaternion}
\par\plain {\f0\fs24\b0\i0 Color}
\par\plain {\f0\fs24\b0\i0 The benefit of typed containers is that they don\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92t need boxing. Especially on mobile platforms using a lot of variables boxed to object type can cause lag.}}